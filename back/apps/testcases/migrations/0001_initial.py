# Generated by Django 4.2.20 on 2025-04-19 05:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="模块名称")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="描述"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="testcases.module",
                        verbose_name="父模块",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="projects.project",
                        verbose_name="所属项目",
                    ),
                ),
            ],
            options={
                "verbose_name": "测试模块",
                "verbose_name_plural": "测试模块",
                "ordering": ["name"],
                "unique_together": {("project", "name", "parent")},
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="标签名"),
                ),
            ],
            options={
                "verbose_name": "标签",
                "verbose_name_plural": "标签",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TestCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="用例标题")),
                (
                    "preconditions",
                    models.TextField(blank=True, null=True, verbose_name="前置条件"),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "P1 - Blocker"),
                            (2, "P2 - Critical"),
                            (3, "P3 - Major"),
                            (4, "P4 - Minor"),
                            (5, "P5 - Trivial"),
                        ],
                        default=3,
                        verbose_name="优先级",
                    ),
                ),
                (
                    "case_type",
                    models.CharField(
                        choices=[
                            ("functional", "功能测试"),
                            ("performance", "性能测试"),
                            ("security", "安全测试"),
                            ("ui", "UI测试"),
                            ("api", "接口测试"),
                            ("compatibility", "兼容性测试"),
                            ("other", "其他"),
                        ],
                        default="functional",
                        max_length=50,
                        verbose_name="用例类型",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[("manual", "手动"), ("automated", "自动")],
                        default="manual",
                        max_length=20,
                        verbose_name="执行方式",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "草稿"),
                            ("ready", "待评审"),
                            ("reviewing", "评审中"),
                            ("approved", "已批准"),
                            ("obsolete", "废弃"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_testcases",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建人",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="testcases",
                        to="testcases.module",
                        verbose_name="所属模块",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testcases",
                        to="projects.project",
                        verbose_name="所属项目",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="testcases",
                        to="testcases.tag",
                        verbose_name="标签",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_testcases",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="最后修改人",
                    ),
                ),
            ],
            options={
                "verbose_name": "测试用例",
                "verbose_name_plural": "测试用例",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="TestStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_number", models.PositiveIntegerField(verbose_name="步骤编号")),
                ("action", models.TextField(verbose_name="操作步骤")),
                ("expected_result", models.TextField(verbose_name="预期结果")),
                (
                    "testcase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="testcases.testcase",
                        verbose_name="所属用例",
                    ),
                ),
            ],
            options={
                "verbose_name": "测试步骤",
                "verbose_name_plural": "测试步骤",
                "ordering": ["step_number"],
                "unique_together": {("testcase", "step_number")},
            },
        ),
    ]
